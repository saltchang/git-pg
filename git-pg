#!/bin/bash

git_pretty_graph() {
    SOLO=
    HEAD=
    NO_PAGER=

    USAGE="
[Usage]

    $(basename "$0") [-H | --help | --usage] [-h] [-P] [-s]

[Descriptions]

    Show the graph tree of Git history of the current repository with colorful text highlighting.

[Options]

    -H | --help | --usage
        Show this help text.

    -h | --head
        Scroll to the position of HEAD in the current branch.

    -P | --no-pager
        Print the Git history without using pager.

    -s | --solo
        Show the history of current branch only.
"

    while [ $# -gt 0 ]; do
        key="$1"

        case $key in
        -H | --help | --usage)
            echo "$USAGE"
            exit 0
            ;;

        -s | --solo)
            SOLO=YES
            shift # past argument
            ;;

        -h | --head)
            HEAD=YES
            shift # past argument
            ;;

        -P | --no-pager)
            NO_PAGER=YES
            shift # past argument
            ;;

        *) # unknown option
            echo
            echo "$(basename "$0"): '$1' is not a valid option. Please see \`$(basename "$0") [-H | --help | --usage]\`"
            exit 1
            ;;
        esac
    done

    C_RESET="%C(reset)"
    C_AUTO="%C(auto)"
    C_ORANGE="%C(bold #ee9f5e)"
    C_YELLOW="%C(#f6ff78)"
    C_CYAN="%C(bold #35b59b)"
    C_GREEN="%C(bold #4ee681)"
    C_BLUE="%C(bold #60b5dd)"

    FORMAT_STRING="${C_ORANGE}%h: ${C_RESET}${C_YELLOW}%s${C_RESET} "

    if [ ! "$NO_PAGER" = "YES" ]; then
        FORMAT_STRING="${FORMAT_STRING}${C_AUTO}%d${C_RESET}%n"
    else
        FORMAT_STRING="${FORMAT_STRING}%d%n"
    fi

    FORMAT_STRING="${FORMAT_STRING}          ${C_CYAN}%as${C_RESET} ${C_GREEN}(%ar)${C_RESET} ${C_BLUE}<%an>${C_RESET}%n"

    GIT_GRAPH_COMMAND="git --no-pager log --graph --decorate --color=always --format=format:'$FORMAT_STRING'"

    if [ ! "$SOLO" = "YES" ]; then
        GIT_GRAPH_COMMAND="${GIT_GRAPH_COMMAND} --all"
    fi

    GIT_GRAPH_COMMAND="${GIT_GRAPH_COMMAND} 2> /dev/null || return"

    if [ ! "$NO_PAGER" = "YES" ]; then
        if [ "$HEAD" = "YES" ]; then
            LESS_STR="| less -RX -p \"(HEAD ->)[^,)]*\""
        else
            LESS_STR="| less +g -RX -p \"(HEAD ->)[^,)]*\""
        fi
    else
        GREP_STR="| GREP_COLORS='0;31;46' GREP_COLOR='0;31;46' grep --color -C 9999 -P '(HEAD ->)[^,)]*'"
    fi

    GIT_GRAPH_COMMAND="($GIT_GRAPH_COMMAND) ${LESS_STR}${GREP_STR}"

    if [ -d .git ]; then
        eval "$GIT_GRAPH_COMMAND"
    else
        git rev-parse --git-dir 2>/dev/null
        printf "\nYou are not in a git repository.\n"
    fi

    return
}

git_pretty_graph "$@"
